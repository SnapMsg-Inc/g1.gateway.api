{
    "swagger": "2.0",
    "info": {
        "title": "SnapMsg API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/admin/posts": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin methods"
                ],
                "summary": "Get all posts filtered by query",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "hashtags",
                        "name": "hashtags",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "author's nickname",
                        "name": "nick",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "text to match",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer",
                        "default": 100,
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Post"
                            }
                        }
                    }
                }
            }
        },
        "/admin/posts/{pid}/block": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin methods"
                ],
                "summary": "Block a given post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post id to block",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin methods"
                ],
                "summary": "Unblock a given post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post id to unblock",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/admin/users/{uid}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin methods"
                ],
                "summary": "Get specific user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/admin/users/{uid}/block": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin methods"
                ],
                "summary": "Block a given user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id to block",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin methods"
                ],
                "summary": "Unblock a given user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id to unblock",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/admin/{uid}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin methods"
                ],
                "summary": "Check if user is admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin methods"
                ],
                "summary": "Create an admin user giving existing user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id to become admin",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin methods"
                ],
                "summary": "Remove admin status from existing user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id of the admin",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/messages": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "send a message notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages methods"
                ],
                "summary": "Send a message notification",
                "parameters": [
                    {
                        "description": "Message Notification Data",
                        "name": "message_notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MessageNotification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/messages/token": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "register a new notification token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages methods"
                ],
                "summary": "Register a new notification token",
                "parameters": [
                    {
                        "description": "Token Data",
                        "name": "token_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TokenData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/posts": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Get posts filtering by query",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "hashtags",
                        "name": "hashtags",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "author's nickname",
                        "name": "nick",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "text to match",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer",
                        "default": 100,
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Post"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Create a new post",
                "parameters": [
                    {
                        "description": "data for the new post",
                        "name": "PostCreate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PostCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/posts/favs": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "List user fav posts",
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer",
                        "default": 100,
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Post"
                            }
                        }
                    }
                }
            }
        },
        "/posts/favs/{pid}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Check if current user favs a given post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pid to check fav",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Add a post to user favs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post id to mark as fav",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Remove a post from user favs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post id to unfav",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/posts/feed": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Get feed of the user making the request",
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer",
                        "default": 100,
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Post"
                            }
                        }
                    }
                }
            }
        },
        "/posts/likes/{pid}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Check if current user liked a given post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pid to check like",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Add a like to a post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post id to like",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Unlike a post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post id to unlike",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/posts/me": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Get posts filtering by query",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "hashtags",
                        "name": "hashtags",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "text to match",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer",
                        "default": 100,
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Post"
                            }
                        }
                    }
                }
            }
        },
        "/posts/me/recommended": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Get recommended posts for a user",
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer",
                        "default": 100,
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Post"
                            }
                        }
                    }
                }
            }
        },
        "/posts/me/snapshares": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves the snapshares associated with the current authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Get snapshares of current user",
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer",
                        "default": 100,
                        "description": "Limit of snapshares to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/posts/snapshares/{pid}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Checks if the current authenticated user has snapshared a specific post.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Check if a post is snapshared by current user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates a new snapshare for a given post by the current user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Create a snapshare",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/posts/stats/me": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get statistics for the current user's posts within a date range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stats"
                ],
                "summary": "Get current user's posts statistics",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date",
                        "description": "Start Date",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "End Date",
                        "name": "end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/posts/{pid}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Delete post owned by current user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post id to delete",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Update some fields of a post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post id to update",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data for update the post",
                        "name": "PostUpdate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PostUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/posts/{pid}/snapshares": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Delete snapshare owned by current user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "snapshare id to delete",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/stats": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Note: metric value must be float64 if type is {gauge | dist | hist}, int64 if type is count, string otherwise.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stats methods"
                ],
                "summary": "Send stat metrics to the cluster's statsd server",
                "parameters": [
                    {
                        "description": "metric data",
                        "name": "metric_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/metrics.Stat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/trendings": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves a list of trending topics.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Get Trending Topics",
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer",
                        "default": 10,
                        "description": "Limit of topics to retrieve",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Post"
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "List public users data filtering by query",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "uid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "user email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "user nickname",
                        "name": "nick",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer",
                        "default": 100,
                        "description": "max results",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserPublic"
                            }
                        }
                    }
                },
                "x-order": "1"
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "User creation data",
                        "name": "userinfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-order": "0"
            }
        },
        "/users/me": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "Get private data of current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "Delete the user making the request",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "Update current user data",
                "parameters": [
                    {
                        "description": "data for update the user",
                        "name": "UserUpdate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/users/me/follows/{uid}": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "Follow a given user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id to follow",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "Unfollow a given user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id to unfollow",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/users/me/recommended": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "Recommend users for the user making the request",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserPublic"
                            }
                        }
                    }
                },
                "x-order": "2"
            }
        },
        "/users/{uid}/followers": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "List followers of given user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id to list followers",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/users/{uid}/follows": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "List follows of a given user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id to list follows",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/users/{uid}/follows/{otheruid}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "Check if uid follows otheruid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id who follows",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the user id beeing followed",
                        "name": "otheruid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "definitions": {
        "metrics.Stat": {
            "type": "object",
            "required": [
                "metric",
                "type",
                "value"
            ],
            "properties": {
                "metric": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string",
                    "default": "count",
                    "enum": [
                        "count",
                        "incr",
                        "decr",
                        "gauge",
                        "set",
                        "dist",
                        "hist"
                    ]
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.MessageNotification": {
            "type": "object",
            "properties": {
                "message_content": {
                    "type": "string"
                },
                "receiver_id": {
                    "type": "string"
                },
                "sender_alias": {
                    "type": "string"
                }
            }
        },
        "models.Post": {
            "type": "object",
            "properties": {
                "hashtags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_blocked": {
                    "type": "boolean"
                },
                "likes": {
                    "type": "integer"
                },
                "media_uri": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pid": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "models.PostCreate": {
            "type": "object",
            "properties": {
                "hashtags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_private": {
                    "type": "boolean"
                },
                "media_uri": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mentioned_user_ids": {
                    "description": "Agregar esta línea",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "models.PostUpdate": {
            "type": "object",
            "properties": {
                "hashtags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_private": {
                    "type": "boolean"
                },
                "media_uri": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "models.TokenData": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "birthdate": {
                    "type": "string",
                    "example": "YYYY-MM-DD"
                },
                "email": {
                    "type": "string"
                },
                "followers": {
                    "type": "integer"
                },
                "follows": {
                    "type": "integer"
                },
                "fullname": {
                    "type": "string"
                },
                "interests": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_admin": {
                    "type": "boolean"
                },
                "nick": {
                    "type": "string"
                },
                "ocupation": {
                    "type": "string"
                },
                "pic": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "zone": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "latitude": 0,
                        "longitude": 0
                    }
                }
            }
        },
        "models.UserCreate": {
            "type": "object",
            "required": [
                "alias",
                "birthdate",
                "email",
                "fullname",
                "interests",
                "nick",
                "ocupation",
                "pic",
                "zone"
            ],
            "properties": {
                "alias": {
                    "type": "string"
                },
                "birthdate": {
                    "type": "string",
                    "example": "YYYY-MM-DD"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "interests": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nick": {
                    "type": "string"
                },
                "ocupation": {
                    "type": "string"
                },
                "pic": {
                    "type": "string"
                },
                "zone": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "latitude": 0,
                        "longitude": 0
                    }
                }
            }
        },
        "models.UserPublic": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "followers": {
                    "type": "integer"
                },
                "follows": {
                    "type": "integer"
                },
                "interests": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nick": {
                    "type": "string"
                },
                "pic": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "models.UserUpdate": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "interests": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nick": {
                    "type": "string"
                },
                "ocupation": {
                    "type": "string"
                },
                "pic": {
                    "type": "string"
                },
                "zone": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "latitude": 0,
                        "longitude": 0
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and Firebase JWT.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}