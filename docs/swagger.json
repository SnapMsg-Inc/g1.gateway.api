{
    "swagger": "2.0",
    "info": {
        "title": "SnapMsg API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/admin/post/:pid": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin methods"
                ],
                "summary": "Delete a given post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post id to delete",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/admin/users/:uid": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin methods"
                ],
                "summary": "Create an admin user giving existing user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id to become admin",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin methods"
                ],
                "summary": "Delete a given user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id to delete",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/posts": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Get posts filtering by query",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "hashtags",
                        "name": "hashtags",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "author's nickname",
                        "name": "nick",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "text to match",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer",
                        "default": 100,
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Post"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Create a new post",
                "parameters": [
                    {
                        "description": "data for the new post",
                        "name": "PostCreate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PostCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/posts/favs": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "List user fav posts",
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer",
                        "default": 100,
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Post"
                            }
                        }
                    }
                }
            }
        },
        "/posts/favs/{pid}": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Add a post to user favs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post id to mark as fav",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Remove a post from user favs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post id to unfav",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/posts/feed": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Get feed of the user making the request",
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer",
                        "default": 100,
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Post"
                            }
                        }
                    }
                }
            }
        },
        "/posts/like/{pid}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Check if current user liked a given post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pid to check like",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/posts/likes/{pid}": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Add a like to a post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post id to like",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Unlike a post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post id to unlike",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/posts/me": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Get posts filtering by query",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "hashtags",
                        "name": "hashtags",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "text to match",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer",
                        "default": 100,
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Post"
                            }
                        }
                    }
                }
            }
        },
        "/posts/recommended": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Get recommended posts for a user",
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer",
                        "default": 100,
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Post"
                            }
                        }
                    }
                }
            }
        },
        "/posts/{pid}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Delete post owned by current user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post id to delete",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts methods"
                ],
                "summary": "Update some fields of a post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post id to update",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "new text for the post",
                        "name": "text",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "new hashtags for the post",
                        "name": "hashtags",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "new media uir's for the post",
                        "name": "media_uri",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "List public users data filtering by query",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "uid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "user email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "user nickname",
                        "name": "nick",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "max results",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserPublic"
                            }
                        }
                    }
                },
                "x-order": "1"
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "User creation data",
                        "name": "userinfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-order": "0"
            }
        },
        "/users/me": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "Get private data of current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "Delete the user making the request",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "Update current user data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "new nickname",
                        "name": "nick",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "new interests",
                        "name": "interests",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "new profile picture",
                        "name": "pic",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/users/me/follows/{uid}": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "Follow a given user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id to follow",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "Unfollow a given user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id to unfollow",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/users/me/recommended": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "Recommend users for the user making the request",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserPublic"
                            }
                        }
                    }
                },
                "x-order": "2"
            }
        },
        "/users/{uid}/followers": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "List followers of given user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id to list followers",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/users/{uid}/follows": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "List follows of a given user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id to list follows",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/users/{uid}/follows/{otheruid}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users methods"
                ],
                "summary": "Check if uid follows otheruid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id who follows",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the user id beeing followed",
                        "name": "otheruid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Post": {
            "type": "object",
            "properties": {
                "hashtags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "likes": {
                    "type": "integer"
                },
                "media_uri": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nick": {
                    "type": "string"
                },
                "pid": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "models.PostCreate": {
            "type": "object",
            "properties": {
                "hashtags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_private": {
                    "type": "boolean"
                },
                "media_uri": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "birthdate": {
                    "type": "string",
                    "example": "YYYY-MM-DD"
                },
                "email": {
                    "type": "string"
                },
                "followers": {
                    "type": "integer"
                },
                "follows": {
                    "type": "integer"
                },
                "fullname": {
                    "type": "string"
                },
                "interests": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_admin": {
                    "type": "boolean"
                },
                "nick": {
                    "type": "string"
                },
                "ocupation": {
                    "type": "string"
                },
                "pic": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "zone": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "latitude": 0,
                        "longitude": 0
                    }
                }
            }
        },
        "models.UserCreate": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "birthdate": {
                    "type": "string",
                    "example": "YYYY-MM-DD"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "interests": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nick": {
                    "type": "string"
                },
                "ocupation": {
                    "type": "string"
                },
                "pic": {
                    "type": "string"
                },
                "zone": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "latitude": 0,
                        "longitude": 0
                    }
                }
            }
        },
        "models.UserPublic": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "followers": {
                    "type": "integer"
                },
                "follows": {
                    "type": "integer"
                },
                "interests": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nick": {
                    "type": "string"
                },
                "pic": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and Firebase JWT.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}